// Upgrade NOTE: replaced 'mul(UNITY_MATRIX_MVP,*)' with 'UnityObjectToClipPos(*)'

#include "UnityCG.cginc"

#ifndef OUTPUT_DIFFUSE
#define OUTPUT_DIFFUSE  0
#endif
#ifndef OUTPUT_ROUGHNESS
#define OUTPUT_ROUGHNESS  0
#endif

sampler2D	_GBufferTex;
sampler2D	_MainTex;
float4		_Color;
float4		_Size;
float4x4	_ViewToProjector;
float4		_FarCorner;

struct v2f{
	float4 pos 			: SV_POSITION;
	float4 proj_pos		: TEXCOORD0;
};

v2f vert(appdata_full v)
{
	v2f o;
	o.pos = UnityObjectToClipPos(float4(v.vertex.xyz,1.0f));//*_LightPos.w);//*_LightPos.w+float4(_LightPos.xyz,0));
	o.proj_pos	=	o.pos;
	o.proj_pos.y *= _FarCorner.w;
	return o;
}


float4 frag(v2f i) : COLOR
{
	float4 ret;
	float4 pos = i.proj_pos/i.proj_pos.w;



	float2 uv = pos.xy*0.5+0.5;

	float4 depth_normal = tex2D(_GBufferTex,uv);
	float2 XY_Depth	=	float2(1.0f,0.003921568627451);
	float depth = dot(XY_Depth,depth_normal.xy);


	float3 view_pos = float3(pos.xy,1.0f)*_FarCorner*depth;

	float4 projector_pos = mul(_ViewToProjector,float4(view_pos,1));
	projector_pos/=projector_pos.w;

	float3 proj_uv = projector_pos.xyz;///_Size.xz;
	float3 _pos = (abs(projector_pos.xyz))>0.5f;//abs(_Size.xyz);
	if(dot(_pos,1)>0.5f)
	{
		return 0;
	}
	proj_uv = proj_uv+0.5f;

	float4 c = tex2D(_MainTex,proj_uv.xz);

	#if OUTPUT_DIFFUSE == 1
	return float4(pow(c.xyz,2.2f),c.w)*_Color;
	#elif OUTPUT_ROUGHNESS == 1

	return  c.w*_Size.w*_Color.w;
	#else
	return 0;//tex2D(_MainTex,proj_uv.xz)*_Color;
	#endif
}